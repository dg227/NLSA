function [ fig, ax, axTitle, Fig ] = tileAxes( Fig )
%TILEAXES Create a figure with a tile of axes for plotting and an axes for
% title. 
% 
% Fig is a data structure specifying the figure parameters. 
%
% Fig.units:      units
% Fig.paperUnits: units for printing
% Fig.deltaX:     left margin
% Fig.deltaX2:    right margin
% Fig.deltaY:     bottom margin
% Fig.deltaY2:    top margin
% Fig.gapX:       horizontal gap between panels
% Fig.gapY:       vertical gap between panels
% Fig.nTileX:     number of rows
% Fig.nTileY:     number of columns
% Fig.aspectR:    vartical/horizontal aspect ratio of panels
% Fig.fontName:   font name
% Fig.fontSize:   font size
% Fig.tickLength: 2-element vector specifying length of tickmarks
% Fig.visible:    specifiesa figure visibility ('on' or 'off')
% Fig.nextPlot:   add/replace
%
% fig is a handle to the figure created.
%
% ax is an array of size [ Fig.nTileX Fig.nTileY ] containing handles to the
% tiled axes created.
%
% axTitle is a handle to the title axis
% 
% Modified 2020/07/20   

% Set paper units if needed
if ~isfield( Fig, 'paperUnits' )
    Fig.paperUnits = Fig.units;
end
if strcmp( Fig.paperUnits, 'pixels' )
    Fig.paperUnits = 'points';
end
if ~isfield( Fig, 'gapT' ) 
    Fig.gapT = 0;
end

% Determine panel sizes and figure position
panelX = ( Fig.figWidth - Fig.deltaX - Fig.deltaX2 ...
               - ( Fig.nTileX -1 ) * Fig.gapX ) / Fig.nTileX;
panelY = panelX * Fig.aspectR;

Fig.panelX = panelX;
Fig.panelY = panelY;

posn = [ 0 ...
         0 ...
         Fig.nTileX * panelX + ( Fig.nTileX - 1 ) * Fig.gapX ...
             + Fig.deltaX + Fig.deltaX2 ...
         Fig.nTileY * panelY + ( Fig.nTileY - 1 ) * Fig.gapY ...
             + Fig.deltaY + Fig.deltaY2 + Fig.gapT ];

% Create figure
fig = figure( 'units',                  Fig.units, ...
              'paperunits',             Fig.paperUnits, ...
              'position',               posn, ...
              'paperPosition',          posn, ...
              'color',                  'white', ...
              'doubleBuffer',           'on', ...
              'backingStore',           'off', ...
              'visible',                Fig.visible, ...
              'defaultAxesTickDir',     'out', ...
              'defaultAxesNextPlot',    'replace', ...
              'defaultAxesBox',         'on', ...
              'defaultAxesFontSize',    Fig.fontSize, ...
              'defaultTextFontSize',    Fig.fontSize, ...
              'defaultAxesTickDir',     'out', ...
              'defaultAxesTickDirMode', 'manual', ...
              'defaultAxesTickLength',  Fig.tickLength, ...
              'defaultAxesFontName',    Fig.fontName, ...
              'defaultTextFontName',    Fig.fontName, ...
              'defaultAxesLayer',       'top', ...
              'defaultAxesNextPlot',    Fig.nextPlot );

% Create tiled axes
ax = zeros( Fig.nTileX, Fig.nTileY );

for jAx = 1 : Fig.nTileY
    for iAx = 1 : Fig.nTileX
        ax( iAx, jAx ) = axes( fig, ...
            'units', Fig.units, ...
            'position', ...
            [ Fig.deltaX + ( iAx - 1 ) * ( panelX + Fig.gapX ), ...
              Fig.deltaY + ( Fig.nTileY - jAx ) * ( panelY + Fig.gapY ), ...
              panelX, panelY ] );
    end
end

% If requested, create title axes
if nargout == 3
    axTitle = axes( fig, ...
    'units', Fig.units, ...
    'position', ...
    [ Fig.deltaX, Fig.deltaY, ...
      Fig.nTileX * Fig.panelX + ( Fig.nTileX - 1 ) * Fig.gapX, ...
      Fig.nTileY * Fig.panelY + ( Fig.nTileY - 1 ) * Fig.gapY + Fig.gapT ], ...
    'color', 'none', ...
    'box', 'off' );
 
    axis( axTitle', 'off' )
end
